plugins {
	id 'org.springframework.boot' version '2.5.8'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.node-gradle.node" version "3.1.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web:2.6.3'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'javax.inject:javax.inject:1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.3'
	implementation 'org.json:json:20211205'
	implementation 'org.apache.httpcomponents:httpcore:4.4.15'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.6.3'
}

test {
	useJUnitPlatform()
}

task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/src/main/js/frontend")
	args = ["install"]
}

task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the webapp"
	workingDir = file("${project.projectDir}/src/main/js/frontend")
	args = ["run", "build"]
}

task copyWebApp(type: Copy) {
	from 'src/main/js/frontend/build'
	into 'build/resources/main/static/.'
}

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp

node {
	download = true

	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/nodejs")

	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")
}